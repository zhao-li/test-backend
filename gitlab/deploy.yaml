.base:
  &base
  stage: deploy

.deploy:
  <<: *base
  variables:
    ENVIRONMENT: "this needs to be set"
  script:
    - echo "deploying to ${ENVIRONMENT}"

release-package:
  <<: *base
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  release:
     name: 'Release $CI_COMMIT_TAG'
     description: Created from CI/CD pipeline
     tag_name: '$CI_COMMIT_TAG'
     ref: '$CI_COMMIT_TAG'
  script:
    - echo "Releasing $CI_COMMIT_TAG"

deploy-to-isolated-staging:
  extends: .deploy
  variables:
    ENVIRONMENT: ${GITLAB_USER_EMAIL}
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /feature/'

deploy-to-staging:
  extends: .deploy
  variables:
    ENVIRONMENT: staging
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'

deploy-to-production:
  extends: .deploy
  variables:
    ENVIRONMENT: production
  rules:
    - if: $CI_COMMIT_TAG

# GitLab Pages require the job to be named "pages":
# https://docs.gitlab.com/ee/user/project/pages/#how-it-works
pages:
  extends: .deploy
  needs:
    - document
  variables:
    # GitLab Pages require the website contents to be located in a folder
    # named public/: https://docs.gitlab.com/ee/user/project/pages/#how-it-works
    GITLAB_PAGES_FOLDER: ${CI_PROJECT_DIR}/public/
  script:
    - ls -la ${ARTIFACT_DESTINATION_DIR}
    - ls -la ${ARTIFACT_DESTINATION_DIR}/docs/
    - ls -la ${ARTIFACT_DESTINATION_DIR}/docs/build/
    - mkdir --parents ${GITLAB_PAGES_FOLDER}/
    - cp
        --recursive
        ${ARTIFACT_DESTINATION_DIR}/docs/build/*
        ${GITLAB_PAGES_FOLDER}/
  artifacts:
    paths:
    - ${GITLAB_PAGES_FOLDER}/

